"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/ai-recommendations";
exports.ids = ["pages/api/ai-recommendations"];
exports.modules = {

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fai-recommendations&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fai-recommendations.js&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fai-recommendations&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fai-recommendations.js&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handler: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/api-utils */ \"(api-node)/./node_modules/next/dist/server/api-utils/index.js\");\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_ai_recommendations_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages/api/ai-recommendations.js */ \"(api-node)/./pages/api/ai-recommendations.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(api-node)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(api-node)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_ai_recommendations_js__WEBPACK_IMPORTED_MODULE_4__]);\n_pages_api_ai_recommendations_js__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// Import the userland code.\n\n\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_ai_recommendations_js__WEBPACK_IMPORTED_MODULE_4__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_ai_recommendations_js__WEBPACK_IMPORTED_MODULE_4__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/ai-recommendations\",\n        pathname: \"/api/ai-recommendations\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_ai_recommendations_js__WEBPACK_IMPORTED_MODULE_4__,\n    distDir: \".next\" || 0,\n    projectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    let srcPage = \"/api/ai-recommendations\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {}\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.getTracer)();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: undefined,\n                multiZoneDraftMode: Boolean(\"false\"),\n                trustHostHeader: undefined,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/ai-recommendations\",\n                projectDir:  false || '',\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        (0,next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__.sendError)(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fai-recommendations&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fai-recommendations.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/ai-recommendations.js":
/*!*****************************************!*\
  !*** ./pages/api/ai-recommendations.js ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _anthropic_ai_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @anthropic-ai/sdk */ \"@anthropic-ai/sdk\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/supabase-js */ \"@supabase/supabase-js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_anthropic_ai_sdk__WEBPACK_IMPORTED_MODULE_0__]);\n_anthropic_ai_sdk__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n// Debug environment variables\nconsole.log('=== ENVIRONMENT CHECK ===');\nconsole.log('ANTHROPIC_API_KEY:', !!process.env.ANTHROPIC_API_KEY);\nconsole.log('NEXT_PUBLIC_SUPABASE_URL:', !!\"https://ttavhdyciroempevbdga.supabase.co\");\nconsole.log('SUPABASE_SERVICE_ROLE_KEY:', !!process.env.SUPABASE_SERVICE_ROLE_KEY);\nconst anthropic = new _anthropic_ai_sdk__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n    apiKey: process.env.ANTHROPIC_API_KEY\n});\n// More robust Supabase client creation\nlet supabase;\ntry {\n    if (false) {}\n    if (!process.env.SUPABASE_SERVICE_ROLE_KEY) {\n        throw new Error('SUPABASE_SERVICE_ROLE_KEY is missing');\n    }\n    supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__.createClient)(\"https://ttavhdyciroempevbdga.supabase.co\", process.env.SUPABASE_SERVICE_ROLE_KEY);\n    console.log('Supabase client created successfully');\n} catch (error) {\n    console.error('Failed to create Supabase client:', error);\n}\n// Test Supabase connection\nif (supabase) {\n    try {\n        console.log('Testing Supabase connection...');\n        const { data, error } = await supabase.from('ai_recommendations').select('count').limit(1);\n        if (error) {\n            console.error('Supabase connection test failed:', error);\n        } else {\n            console.log('✅ Supabase connection test successful');\n        }\n    } catch (testError) {\n        console.error('Supabase connection test error:', testError);\n    }\n}\nasync function handler(req, res) {\n    if (req.method !== 'POST') {\n        return res.status(405).json({\n            message: 'Method not allowed'\n        });\n    }\n    try {\n        const { dashboardData, restaurantId } = req.body;\n        console.log('API called with restaurantId:', restaurantId);\n        // Check if Supabase client was created successfully\n        if (!supabase) {\n            console.log('Supabase client not available, generating fresh recommendations');\n            // Fall back to generating fresh recommendations without caching\n            return await generateFreshRecommendations(dashboardData, res);\n        }\n        // Get current date in EST\n        const now = new Date();\n        const estDate = new Date(now.toLocaleString(\"en-US\", {\n            timeZone: \"America/New_York\"\n        }));\n        const currentDate = estDate.toISOString().split('T')[0];\n        console.log('Checking for cached recommendations for date:', currentDate);\n        // Check if we already have recommendations for today\n        const { data: existingRecs, error: fetchError } = await supabase.from('ai_recommendations').select('recommendations').eq('restaurant_id', restaurantId).eq('generated_date', currentDate).single();\n        if (fetchError) {\n            console.log('No cached recommendations found or error:', fetchError.message);\n        }\n        if (!fetchError && existingRecs) {\n            console.log('Returning cached recommendations');\n            return res.status(200).json({\n                recommendations: existingRecs.recommendations,\n                cached: true,\n                date: currentDate\n            });\n        }\n        console.log('Generating new recommendations');\n        return await generateAndStoreRecommendations(dashboardData, restaurantId, currentDate, estDate, res);\n    } catch (error) {\n        console.error('Error in AI recommendations API:', error);\n        res.status(500).json({\n            message: 'Error generating recommendations',\n            error: error.message\n        });\n    }\n}\n// Helper function to generate fresh recommendations without caching\nasync function generateFreshRecommendations(dashboardData, res) {\n    const prompt = `You are an AI restaurant consultant. Provide exactly 3 actionable daily recommendations.\n\nRESTAURANT DATA:\n- Total Menu Items: ${dashboardData.totalMenuItems || 0}\n- Average Margin: ${dashboardData.averageMargin?.toFixed(1) || 0}%\n\nReturn EXACTLY this JSON format:\n{\n  \"recommendations\": [\n    {\n      \"title\": \"Action Title\",\n      \"description\": \"Brief explanation\", \n      \"type\": \"promote\",\n      \"color\": \"green\"\n    },\n    {\n      \"title\": \"Second Action\",\n      \"description\": \"Brief explanation\",\n      \"type\": \"alert\", \n      \"color\": \"orange\"\n    },\n    {\n      \"title\": \"Third Action\",\n      \"description\": \"Brief explanation\",\n      \"type\": \"optimize\",\n      \"color\": \"red\"\n    }\n  ]\n}`;\n    const message = await anthropic.messages.create({\n        model: \"claude-3-5-sonnet-20241022\",\n        max_tokens: 800,\n        messages: [\n            {\n                role: \"user\",\n                content: prompt\n            }\n        ]\n    });\n    const responseText = message.content[0].text;\n    const jsonMatch = responseText.match(/\\{[\\s\\S]*\\}/);\n    const aiResponse = JSON.parse(jsonMatch[0]);\n    return res.status(200).json({\n        recommendations: aiResponse.recommendations,\n        cached: false,\n        note: \"Generated without caching\"\n    });\n}\n// Helper function to generate and store recommendations\nasync function generateAndStoreRecommendations(dashboardData, restaurantId, currentDate, estDate, res) {\n    // Your full prompt here\n    const prompt = `You are an AI restaurant consultant analyzing data for this restaurant. Based on the comprehensive data below, provide exactly 3 actionable daily recommendations for ${currentDate}.\n\nRESTAURANT DATA:\n- Total Menu Items: ${dashboardData.totalMenuItems}\n- Average Margin: ${dashboardData.averageMargin?.toFixed(1)}%\n\nMENU ANALYSIS:\n${dashboardData.menuItemAnalysis?.slice(0, 5).map((item)=>`- ${item.name}: $${item.price} (${item.margin?.toFixed(1)}% margin)`).join('\\n')}\n\nCurrent Date: ${currentDate}\nDay of Week: ${estDate.toLocaleDateString('en-US', {\n        weekday: 'long'\n    })}\n\nINSTRUCTIONS:\nReturn EXACTLY 3 recommendations in this JSON format:\n{\n  \"recommendations\": [\n    {\n      \"title\": \"Action Title (max 25 chars)\",\n      \"description\": \"Brief explanation (max 45 chars)\", \n      \"type\": \"promote|optimize|alert\",\n      \"color\": \"green|orange|red\"\n    }\n  ]\n}`;\n    const message = await anthropic.messages.create({\n        model: \"claude-3-5-sonnet-20241022\",\n        max_tokens: 1000,\n        temperature: 0.7,\n        messages: [\n            {\n                role: \"user\",\n                content: prompt\n            }\n        ]\n    });\n    const responseText = message.content[0].text;\n    const jsonMatch = responseText.match(/\\{[\\s\\S]*\\}/);\n    const aiResponse = JSON.parse(jsonMatch[0]);\n    // Try to store recommendations\n    try {\n        console.log('Attempting to store recommendations for restaurant:', restaurantId);\n        console.log('Data to store:', {\n            restaurant_id: restaurantId,\n            generated_date: currentDate,\n            recommendations: aiResponse.recommendations\n        });\n        const { data, error: insertError } = await supabase.from('ai_recommendations').upsert({\n            restaurant_id: restaurantId,\n            generated_date: currentDate,\n            recommendations: aiResponse.recommendations\n        }).select(); // Add .select() to see what was inserted\n        if (insertError) {\n            console.error('Insert error details:', insertError);\n        } else {\n            console.log('Successfully stored recommendations:', data);\n        }\n    } catch (storeError) {\n        console.error('Failed to store recommendations:', storeError);\n    }\n    return res.status(200).json({\n        recommendations: aiResponse.recommendations,\n        cached: false,\n        date: currentDate\n    });\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } }, 1);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/ai-recommendations.js\n");

/***/ }),

/***/ "@anthropic-ai/sdk":
/*!************************************!*\
  !*** external "@anthropic-ai/sdk" ***!
  \************************************/
/***/ ((module) => {

module.exports = import("@anthropic-ai/sdk");;

/***/ }),

/***/ "@supabase/supabase-js":
/*!****************************************!*\
  !*** external "@supabase/supabase-js" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("@supabase/supabase-js");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fai-recommendations&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fai-recommendations.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();